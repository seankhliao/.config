# ==================== KeyBindings ===================
sudo-command-line() {
[[ -z $BUFFER ]] && zle up-history
if [[ $BUFFER == sudo\ * ]]; then
    LBUFFER="${LBUFFER#sudo }"
else
    LBUFFER="sudo $LBUFFER"
fi
}
zle -N sudo-command-line
zle -N history-substring-search-up
zle -N history-substring-search-down
# Defined shortcut keys: [Esc] [Esc]
bindkey -e
bindkey "\e\e" sudo-command-line
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[[H' beginning-of-line
bindkey '^[[4~' end-of-line
bindkey '^[[F' end-of-line

# =================== ZSH Options ==================
setopt AUTOCD
setopt COMPLETE_ALIASES
setopt COMPLETEINWORD
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# =================== ZSH Completion =================
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true
zstyle ':completion:*' list-colors "${(@s.:.)LS_COLORS}"
zstyle ':completion:*' matcher-list '' \
    'm:{a-z\-}={A-Z\_}' \
    'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
    'r:|?=** m:{a-z\-}={A-Z\_}'
autoload -Uz compinit
compinit -d "$XDG_RUNTIME_DIR"/zcompdump

# ===================== Aliases ===================
alias -s go='go run'
#
#
alias ..='cd ..'

alias ..2='cd ../..'
alias ...='cd ../..'

alias ..3='cd ../../..'
alias ....='cd ../../..'

alias ..4='cd ../../../..'
alias .....='cd ../../../..'

alias ..5='cd ../../../../..'
alias ......='cd ../../../../..'

alias ..6='cd ../../../../../..'
alias .......='cd ../../../../../..'

alias cdr='cd -P .'

alias diskspace="df -P -kHl"
alias filespace='du -d 1 -h . 2>/dev/null | sort -h -r'

alias g='git'
# compdef g='git'
alias gd='git --git-dir=$HOME/code/dotfiles --work-tree=$HOME'
# compdef gd='git'
#
fucntion gsall() {
    bold=$(tput bold)
    normal=$(tput sgr0)

    for dir in ~/code/*; do
        if [ -d "$dir" ]; then
            if [ -d "$dir"/.git ]; then
                echo "${bold}$dir${normal}"
                cd $dir
                git status -s
                echo ""
                cd ..
            fi
        fi
    done
}

alias h='htop'
alias l='ls -lGh'
alias ll='ls -alGh'
alias ls='ls --color'

function buildpkg() {
    makepkg -ifsrc --noconfirm
    CUR=$(pwd)
    TMP=$(mktemp -d)
    cp PKGBUILD $TMP
    # rm -rf $CUR
    mkdir $CUR
    cd $CUR
    mv $TMP/PKGBUILD .
    rm -rf $TMP
}

function godir() {
    mkdir $HOME/code/$1
    ln -s $HOME/code/$1 $GOPATH/src/github.com/seankhliao/$1
    cd $HOME/code/$1
    git init

    cat << EOF > LICENSE
MIT License

Copyright (c) 2018 Sean Liao

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
EOF

    cat << EOF > README.md
# $1 [![Build Status][1]][2] [![Go Report Card][3]][4] [![GoDoc][5]][6] [![License: MIT][7]][8]
[1]: https://img.shields.io/travis/seankhliao/$1.svg?style=flat-square
[2]: https://travis-ci.org/seankhliao/$1
[3]: https://goreportcard.com/badge/github.com/seankhliao/$1?style=flat-square
[4]: https://goreportcard.com/report/github.com/seankhliao/$1
[5]: https://godoc.org/github.com/seankhliao/$1?status.svg?style=flat-square
[6]: https://godoc.org/github.com/seankhliao/$1
[7]: https://img.shields.io/badge/License-MIT-blue.svg?longCache=true&style=flat-square
[8]: LICENSE
EOF
}

# alias ipy='ipython3'
alias py='python3'

alias s='ssh'
compdef s='ssh'

if [ -f '/usr/bin/nvim' ]; then
    alias v='nvim'
else
    alias v='vim'
fi


# ===================== Functions =====================
# function enc() {openssl enc -AES256 -in "$@" -out "$@.enc"}
# function encd() {openssl enc -d -AES256 -in "$@" -out "${@%.*}"}


# ===================== Local =========================
if [ "$HOST" = 'daenerys' ]; then
    alias cr='google-chrome-unstable'
    alias p='yay'
    compdef p='yay'
    alias p_clean='yay -Rns $(p -Qdtq)'
    alias p_update='yay -Syu --noconfirm'
    alias sd='sudo systemctl'
    compdef sd='systemctl'
    alias t='tag -i'

    export TAG_CMD_FMT_STRING="$EDITOR {{.Filename }} +{{ .LineNumber }}"
    if (( $+commands[tag] )); then
        tag() {
            command tag "$@";
            source ${TAG_ALIAS_FILE:-/tmp/tag_aliases} 2>/dev/null
        }
    fi
fi


# ==================== Plugins =======================
PLUGIN_HOME=$XDG_DATA_HOME/zsh/plugins
if [ ! -d $PLUGIN_HOME ] ; then
    mkdir -p $PLUGIN_HOME
fi

PLUG=$PLUGIN_HOME/dadl/dadl.zsh
if [ ! -f $PLUG ] ; then
    git clone --depth=1 https://github.com/seankhliao/dadl $PLUGIN_HOME/dadl
fi
source $PLUG
PLUG=$PLUGIN_HOME/zsh-autosuggestions/zsh-autosuggestions.zsh
if [ ! -f $PLUG ] ; then
    git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions $PLUGIN_HOME/zsh-autosuggestions
fi
source $PLUG
PLUG=$PLUGIN_HOME/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
if [ ! -f $PLUG ] ; then
    git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting $PLUGIN_HOME/zsh-syntax-highlighting
fi
source $PLUG
PLUG=$PLUGIN_HOME/zsh-history-substring-search/zsh-history-substring-search.zsh
if [ ! -f $PLUG ] ; then
    git clone --depth=1 https://github.com/zsh-users/zsh-history-substring-search $PLUGIN_HOME/zsh-history-substring-search
fi
source $PLUG

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/opt/google-cloud-sdk/path.zsh.inc' ]; then source '/opt/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/opt/google-cloud-sdk/completion.zsh.inc' ]; then source '/opt/google-cloud-sdk/completion.zsh.inc'; fi
#
# if [ $commands[kubectl] ]; then
#   source <(kubectl completion zsh)
# fi
# if [ $commands[minikube] ]; then
#   source <(minikube completion zsh)
# fi

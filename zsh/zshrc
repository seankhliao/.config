#!/bin/zsh
# ==================== KeyBindings ===================
sudo-command-line() {
    [[ -z $BUFFER ]] && zle up-history
    if [[ $BUFFER == sudo\ * ]]; then
        LBUFFER="${LBUFFER#sudo }"
    else
        LBUFFER="sudo $LBUFFER"
    fi
}
zle -N sudo-command-line
zle -N history-substring-search-up
zle -N history-substring-search-down
# Defined shortcut keys: [Esc] [Esc]
bindkey -e
bindkey "\e\e" sudo-command-line
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[[H' beginning-of-line
bindkey '^[[4~' end-of-line
bindkey '^[[F' end-of-line

# =================== ZSH Options ==================
setopt AUTOCD

setopt EXTENDED_GLOB
setopt GLOB_DOTS

setopt AUTO_LIST
setopt AUTO_MENU
setopt AUTO_PARAM_SLASH
setopt COMPLETE_IN_WORD
setopt HASH_LIST_ALL

setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_NO_FUNCTIONS
setopt HIST_NO_STORE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

setopt ALIASES
setopt CORRECT

# =================== ZSH Completion =================
zstyle ':completion::complete:*' gain-privileges 1
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true
zstyle ':completion:*' list-colors "${(@s.:.)LS_COLORS}"
zstyle ':completion:*' matcher-list '' \
    '+m:{a-z}={A-Z}' '+m:{A-Z}={a-z}' \
    'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
    'r:|?=** m:{a-z\-}={A-Z\_}'
autoload -Uz compinit
compinit -d "$XDG_RUNTIME_DIR"/zcompdump

autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# ===================== Aliases ===================
alias -s go='go run'
alias -s py='python3'


alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias .......='cd ../../../../../..'

alias cdr='cd -P .'
function colortest () {
    for i in {0..255} ; do
        printf "\x1b[48;5;%sm%3d\e[0m " "$i" "$i"
        if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then
            printf "\n";
        fi
    done
}
alias cp='cp -v'
alias cr='google-chrome-unstable'

alias diff='diff --color=always'
alias diskspace="df -P -kHl"
alias filespace='du -d 1 -h . 2>/dev/null | sort -h -r'

alias forget="sed -i '$ d' $HISTFILE ; sed -i '$ d' $HISTFILE"

alias g='git'
# create aliases for git
# g<alias> where <alias> is defined in git/config
function git_aliases() {
    local start_alias=false
    while read line; do
        if ! $start_alias; then
            [[ $line =~ '\s*\[alias\]' ]] && start_alias=true
        else
            [[ $line =~ '\s*\[[a-z]*\]' ]] && break
            sub=${${line%%=*}// /}
            [[ $sub ]] && alias g${sub}="git ${sub}"
        fi
    done < $XDG_CONFIG_HOME/git/config
}
git_aliases

alias gmail-filters-upload="gmailfilters $XDG_CONFIG_HOME/gmail/filters.toml"
alias gmail-filters-edit="nvim $XDG_CONFIG_HOME/gmail/filters.toml"
alias grep='grep --color=auto'

function gsall() {
    local bold=$(tput bold)
    local normal=$(tput sgr0)

    for dir in ~/code/*; do
        if [[ -d ${dir} ]] && [[ -d ${dir}/.git ]]; then
            echo "\n${bold}$dir${normal}"
            git -C ${dir} status -s
        fi
    done
}

alias h='htop'
alias l='ls -lGh'
alias ll='ls -alGh'
alias ln='ln -v'
alias ls='ls --color'

function md() {
    mkdir -p "$1" && cd "$1"
}
alias mv='mv -v'

alias p='yay'
alias p-update='yay -Syu --noconfirm'
alias p-clean=' yay -Rns $(yay -Qtdq); yay -Sc'

alias py='python3'
alias py2='python3'

alias s='ssh'
alias sd='sudo systemctl'
alias sdu='systemctl --user'
alias start-vpn='sudo systemctl start wg-quick@wg0'
alias stop-vpn='sudo systemctl stop wg-quick@wg0'
alias sudo='sudo --preserve-env'

export TAG_CMD_FMT_STRING="$EDITOR {{.Filename }} +{{ .LineNumber }}"
function t() {
    command tag -i "$@"
    source ${TAG_ALIAS_FILE:-/tmp/tag_aliases} 2>/dev/null
}
alias tag='t'

alias v='vim'
[[ -f '/usr/bin/nvim' ]] && alias v='nvim'

function wifi-add() {
    wpa_passphrase "$@" | sudo tee -a /etc/wpa_supplicant/wpa_supplicant-wlp58s0.conf
}
alias wifi-restart="sudo systemctl restart wpa_supplicant@wlp58s0.service"

alias zrc="nvim $XDG_CONFIG_HOME/zsh/zshrc"

# ==================== Plugins =======================
local PLUGIN_HOME=$XDG_DATA_HOME/zsh/plugins

function _update_plugin () {
    echo "\n$1/$2"
    if [[ -d $PLUGIN_HOME/$2 ]] ; then
        git -C $PLUGIN_HOME/$2 pull
    else
        git clone "https://github.com/"$1/$2 $PLUGIN_HOME/$2
    fi
    zcompile $PLUGIN_HOME/$2/$2.zsh
}

function update_plugins () {
    [[ -d $PLUGIN_HOME ]] || mkdir -p $PLUGIN_HOME

    _update_plugin zsh-users zsh-autosuggestions
    _update_plugin zsh-users zsh-history-substring-search
    _update_plugin zsh-users zsh-syntax-highlighting
    _update_plugin seankhliao zsh-prompt
}

local plugins=('zsh-autosuggestions' 'zsh-history-substring-search' 'zsh-syntax-highlighting' 'zsh-prompt')
for f in $plugins; do 
    source $PLUGIN_HOME/$f/$f.zsh
done

# The next line updates PATH for the Google Cloud SDK.
[[ -f '/opt/google-cloud-sdk/path.zsh.inc' ]] &&  source '/opt/google-cloud-sdk/path.zsh.inc'

# The next line enables shell command completion for gcloud.
[[ -f '/opt/google-cloud-sdk/completion.zsh.inc' ]] && source '/opt/google-cloud-sdk/completion.zsh.inc'
